---
import { getCollection } from "astro:content";

const getSlideNumber = (slug: `slide-${number}`) =>
  Number(slug.split("slide-")[1]);

const slides = (await getCollection("slides")).sort(
  (a, b) => getSlideNumber(a.slug) - getSlideNumber(b.slug),
);

const currentSlideIndex = slides.findIndex(
  (slide) => slide.slug == Astro.params.slug,
);
const nextSlide =
  currentSlideIndex + 1 === slides.length
    ? undefined
    : slides[currentSlideIndex + 1]?.slug;
const previousSlide =
  currentSlideIndex === 0 ? undefined : slides[currentSlideIndex - 1]?.slug;
---

<slide-prev-next
  data-previous-slide={previousSlide}
  data-next-slide={nextSlide}
  class:list={["slide-prev-next", { invisible: !(previousSlide || nextSlide) }]}
>
  <a
    href={`/slides/${previousSlide}/`}
    class:list={["prev-slide", "is-icon-only", { invisible: !previousSlide }]}
  >
    <i class="ri-arrow-left-s-line ri-3x"></i>
  </a>
  <a
    href={`/slides/${nextSlide}/`}
    class:list={["next-slide", "is-icon-only", { invisible: !nextSlide }]}
  >
    <i class="ri-arrow-right-s-line ri-3x"></i>
  </a>
</slide-prev-next>

<style>
  .slide-prev-next {
    position: absolute;
    top: 50%;
    bottom: 50%;
    left: 0;
    width: 100vw;
    display: flex;
    padding-inline: 3rem;
    justify-content: space-between;
  }
</style>

<script>
  class PrevNextNav extends HTMLElement {
    connectedCallback() {
      const { previousSlide, nextSlide } = this?.dataset;

      document.addEventListener("keydown", (event) => {
        console.log("keydown");
        if (event.key === "ArrowRight" && nextSlide) {
          location.href = `/slides/${nextSlide}/`;
        } else if (event.key === "ArrowLeft" && previousSlide) {
          location.href = `/slides/${previousSlide}/`;
        }
      });
    }
  }

  customElements.define("slide-prev-next", PrevNextNav);
</script>
